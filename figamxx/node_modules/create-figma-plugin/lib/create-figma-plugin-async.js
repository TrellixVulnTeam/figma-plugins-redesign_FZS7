"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFigmaPluginAsync = void 0;
const common_1 = require("@create-figma-plugin/common");
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const clone_from_template_async_1 = require("./clone-from-template-async");
const install_dependencies_async_1 = require("./install-dependencies-async");
const interpolate_values_into_files_async_1 = require("./interpolate-values-into-files-async");
const resolve_latest_versions_1 = require("./resolve-latest-versions");
const create_default_settings_1 = require("./settings/create-default-settings");
const prompt_for_user_input_async_1 = require("./settings/prompt-for-user-input-async");
async function createFigmaPluginAsync(options, useDefaults) {
    try {
        if (typeof options.name !== 'undefined') {
            await throwIfDirectoryExistsAsync(path_1.join(process.cwd(), options.name));
        }
        common_1.log.info('Scaffolding a new plugin...');
        const settings = useDefaults
            ? create_default_settings_1.createDefaultSettings(options)
            : await prompt_for_user_input_async_1.promptForUserInputAsync(options);
        const pluginDirectoryPath = path_1.join(process.cwd(), settings.name);
        await throwIfDirectoryExistsAsync(pluginDirectoryPath);
        common_1.log.info('Cloning template...');
        await clone_from_template_async_1.cloneFromTemplateAsync(pluginDirectoryPath, settings.template);
        const createFigmaPluginVersions = await resolve_latest_versions_1.resolveLatestVersions();
        await interpolate_values_into_files_async_1.interpolateValuesIntoFilesAsync(pluginDirectoryPath, {
            ...settings,
            createFigmaPluginVersions
        });
        common_1.log.info('Installing dependencies...');
        await install_dependencies_async_1.installDependenciesAsync(pluginDirectoryPath);
    }
    catch (error) {
        common_1.log.error(error.message);
        process.exit(1);
    }
    common_1.log.success('Done');
}
exports.createFigmaPluginAsync = createFigmaPluginAsync;
async function throwIfDirectoryExistsAsync(directory) {
    if ((await fs_extra_1.pathExists(directory)) === true) {
        throw new Error(`Directory already exists: ${directory}`);
    }
}
//# sourceMappingURL=create-figma-plugin-async.js.map