"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.promptForUserInputAsync = void 0;
const common_1 = require("@create-figma-plugin/common");
const gitUserName = require("git-user-name");
const inquirer_1 = require("inquirer");
const create_plugin_display_name_1 = require("./create-plugin-display-name");
async function promptForUserInputAsync(options) {
    const { name, template } = options;
    const questions = [
        typeof name === 'undefined'
            ? false
            : {
                filter,
                message: 'name',
                name: 'name',
                type: 'input',
                validate
            },
        {
            default: function (values) {
                if (typeof name !== 'undefined') {
                    return create_plugin_display_name_1.createPluginDisplayName(name);
                }
                if (typeof values.name !== 'undefined') {
                    return create_plugin_display_name_1.createPluginDisplayName(values.name);
                }
                return undefined;
            },
            filter,
            message: 'display name',
            name: 'displayName',
            type: 'input',
            validate
        },
        typeof template === 'undefined'
            ? false
            : {
                default: common_1.constants.defaultTemplate,
                filter,
                message: 'template',
                name: 'template',
                type: 'input'
            },
        {
            default: common_1.constants.packageJson.defaultVersion,
            filter,
            message: 'version',
            name: 'version',
            type: 'input'
        },
        {
            filter,
            message: 'description',
            name: 'description',
            type: 'input'
        },
        {
            filter,
            message: 'repository url',
            name: 'repositoryUrl',
            type: 'input'
        },
        {
            default: gitUserName(),
            filter,
            message: 'author',
            name: 'author',
            type: 'input'
        },
        {
            default: common_1.constants.packageJson.defaultLicense,
            filter,
            message: 'license',
            name: 'license',
            type: 'input'
        }
    ].filter(Boolean);
    return {
        ...(await inquirer_1.prompt(questions)),
        name,
        template
    };
}
exports.promptForUserInputAsync = promptForUserInputAsync;
const multipleSpaceRegex = /\s+/g;
function validate(input) {
    if (input.replace(multipleSpaceRegex, '').trim().length > 0) {
        return true;
    }
    return 'Required';
}
function filter(input) {
    return input.replace(multipleSpaceRegex, ' ').trim();
}
//# sourceMappingURL=prompt-for-user-input-async.js.map