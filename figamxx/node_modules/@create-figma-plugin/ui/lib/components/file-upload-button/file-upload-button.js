/** @jsx h */
import classnames from '@sindresorhus/class-names';
import { h } from 'preact';
import { useCallback } from 'preact/hooks';
import { ESCAPE_KEY_CODE } from '../../utilities/key-codes';
import { LoadingIndicator } from '../loading-indicator/loading-indicator';
import styles from './file-upload-button.scss';
export function FileUploadButton({ acceptedFileTypes, children, disabled, focused, fullWidth, loading, multiple, onClick, onSelectedFiles, propagateEscapeKeyDown = true, ...rest }) {
    const handleClick = useCallback(function (event) {
        ;
        event.target.focus();
    }, []);
    const handleChange = useCallback(function (event) {
        const files = Array.prototype.slice
            .call(event.target.files)
            .sort(comparator);
        onSelectedFiles(files, event);
    }, [onSelectedFiles]);
    const handleKeyDown = useCallback(function (event) {
        const keyCode = event.keyCode;
        if (keyCode === ESCAPE_KEY_CODE) {
            if (propagateEscapeKeyDown === false) {
                event.stopPropagation();
            }
            ;
            event.target.blur();
        }
    }, [propagateEscapeKeyDown]);
    const accept = typeof acceptedFileTypes !== 'undefined'
        ? acceptedFileTypes.join(',')
        : undefined;
    return (h("div", { class: classnames(styles.button, fullWidth === true ? styles.fullWidth : null, disabled === true ? styles.disabled : null, loading === true ? styles.loading : null) },
        loading === true ? (h("div", { class: styles.loadingIndicator },
            h(LoadingIndicator, null))) : null,
        h("input", Object.assign({}, rest, { accept: accept, class: styles.input, "data-initial-focus": focused === true, multiple: multiple, onChange: handleChange, onClick: handleClick, onKeyDown: handleKeyDown, tabIndex: disabled === true ? undefined : 0, title: "", type: "file" })),
        h("button", { disabled: disabled === true, onClick: onClick, tabIndex: -1 }, children)));
}
function comparator(a, b) {
    const aName = a.name.toLowerCase();
    const bName = b.name.toLowerCase();
    if (aName !== bName) {
        return aName.localeCompare(bName);
    }
    return a.lastModified - b.lastModified;
}
//# sourceMappingURL=file-upload-button.js.map