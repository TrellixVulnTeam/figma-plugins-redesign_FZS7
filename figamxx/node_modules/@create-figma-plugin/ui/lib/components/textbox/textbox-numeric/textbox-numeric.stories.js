/** @jsx h */
import { h } from 'preact';
import { useState } from 'preact/hooks';
import { spaceHorizontalIcon } from '../../icon/icons/space-horizontal-icon';
import { TextboxNumeric } from './textbox-numeric';
export default { title: 'Textbox Numeric' };
export const Empty = function () {
    const [state, setState] = useState({ foo: '' });
    return h(TextboxNumeric, { name: "foo", onChange: setState, value: state.foo });
};
export const Disabled = function () {
    const [state, setState] = useState({ foo: '' });
    return (h(TextboxNumeric, { disabled: true, name: "foo", onChange: setState, value: state.foo }));
};
export const WithPlaceholder = function () {
    const [state, setState] = useState({ foo: '' });
    return (h(TextboxNumeric, { name: "foo", onChange: setState, placeholder: "Placeholder", value: state.foo }));
};
export const Filled = function () {
    const [state, setState] = useState({ foo: 42 });
    return (h(TextboxNumeric, { name: "foo", onChange: setState, value: `${state.foo}` }));
};
export const FilledDisabled = function () {
    const [state, setState] = useState({ foo: 42 });
    return (h(TextboxNumeric, { disabled: true, name: "foo", onChange: setState, value: `${state.foo}` }));
};
export const Mixed = function () {
    const [state, setState] = useState({ foo: null });
    return h(TextboxNumeric, { name: "foo", onChange: setState, value: state.foo });
};
export const NoBorder = function () {
    const [state, setState] = useState({ foo: 42 });
    return (h(TextboxNumeric, { name: "foo", noBorder: true, onChange: setState, value: `${state.foo}` }));
};
export const WithIcon = function () {
    const [state, setState] = useState({ foo: '' });
    return (h(TextboxNumeric, { icon: spaceHorizontalIcon, name: "foo", onChange: setState, placeholder: "Space", value: state.foo }));
};
export const WithTextIcon = function () {
    const [state, setState] = useState({ foo: '' });
    return (h(TextboxNumeric, { icon: "X", name: "foo", onChange: setState, value: state.foo }));
};
export const Integer = function () {
    const [state, setState] = useState({ foo: 42 });
    return (h(TextboxNumeric, { integer: true, name: "foo", onChange: setState, value: `${state.foo}` }));
};
export const CustomIncrements = function () {
    const [state, setState] = useState({ foo: 42 });
    return (h(TextboxNumeric, { incrementBig: 20, incrementSmall: 4, name: "foo", onChange: setState, value: `${state.foo}` }));
};
export const MinimumMaximum = function () {
    const [state, setState] = useState({ foo: 42 });
    return (h(TextboxNumeric, { maximum: 100, minimum: 0, name: "foo", onChange: setState, value: `${state.foo}` }));
};
//# sourceMappingURL=textbox-numeric.stories.js.map