/** @jsx h */
import { h } from 'preact';
import { useState } from 'preact/hooks';
import { searchIcon } from '../../icon/icons/search-icon';
import { TextboxAutocomplete } from './textbox-autocomplete';
export default { title: 'Textbox Autocomplete' };
const options = [
    { value: 'foo' },
    { value: 'bar' },
    { value: 'baz' },
    { separator: true },
    { header: 'Header' },
    { value: 'qux' },
    { value: 'quux' },
    { value: 'quuux' },
    { value: 'quuuux' },
    { value: 'quuuuux' }
];
export const Empty = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { name: "foo", onChange: setState, options: options, value: state.foo }));
};
export const Disabled = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { disabled: true, name: "foo", onChange: setState, options: options, value: state.foo }));
};
export const WithPlaceholder = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { name: "foo", onChange: setState, options: options, placeholder: "Placeholder", value: state.foo }));
};
export const Filled = function () {
    const [state, setState] = useState({ foo: 'baz' });
    return (h(TextboxAutocomplete, { name: "foo", onChange: setState, options: options, value: state.foo }));
};
export const FilledDisabled = function () {
    const [state, setState] = useState({ foo: 'baz' });
    return (h(TextboxAutocomplete, { disabled: true, name: "foo", onChange: setState, options: options, value: state.foo }));
};
export const NoBorder = function () {
    const [state, setState] = useState({ foo: 'baz' });
    return (h(TextboxAutocomplete, { name: "foo", noBorder: true, onChange: setState, options: options, value: state.foo }));
};
export const WithIcon = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { icon: searchIcon, name: "foo", onChange: setState, options: options, placeholder: "Search", value: state.foo }));
};
export const WithTextIcon = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { icon: "S", name: "foo", onChange: setState, options: options, placeholder: "Search", value: state.foo }));
};
export const Strict = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { name: "foo", onChange: setState, options: options, strict: true, value: state.foo }));
};
export const Filter = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { filter: true, name: "foo", onChange: setState, options: options, value: state.foo }));
};
export const FilterStrict = function () {
    const [state, setState] = useState({ foo: null });
    return (h(TextboxAutocomplete, { filter: true, name: "foo", onChange: setState, options: options, strict: true, value: state.foo }));
};
export const MenuTop = function () {
    const [state, setState] = useState({ foo: null });
    return (h("div", { style: {
            marginTop: '128px'
        } },
        h(TextboxAutocomplete, { name: "foo", onChange: setState, options: options, top: true, value: state.foo })));
};
//# sourceMappingURL=textbox-autocomplete.stories.js.map